-module(internal_client).

%% this file was generated by grpc

-export(['CanAccess'/3,
         'IdentifyThing'/3,
         'IdentifyUser'/3]).

-type 'AccessReq'() ::
    #{token => string(),
      chanID => integer()}.

-type 'ThingID'() ::
    #{value => integer()}.

-type 'Token'() ::
    #{value => string()}.

-type 'UserID'() ::
    #{value => string()}.

-export_type(['AccessReq'/0,
              'ThingID'/0,
              'Token'/0,
              'UserID'/0]).

-spec decoder() -> module().
%% The module (generated by gpb) used to encode and decode protobuf
%% messages.
decoder() -> internal.

%% RPCs for service 'ThingsService'

-spec 'CanAccess'(
        Connection::grpc_client:connection(),
        Message::'AccessReq'(),
        Options::[grpc_client:stream_option() |
                  {timeout, timeout()}]) ->
        grpc_client:unary_response('ThingID'()).
%% This is a unary RPC
'CanAccess'(Connection, Message, Options) ->
    grpc_client:unary(Connection, Message,
                      'ThingsService', 'CanAccess',
                       decoder(), Options).

-spec 'IdentifyThing'(
        Connection::grpc_client:connection(),
        Message::'Token'(),
        Options::[grpc_client:stream_option() |
                  {timeout, timeout()}]) ->
        grpc_client:unary_response('ThingID'()).
%% This is a unary RPC
'IdentifyThing'(Connection, Message, Options) ->
    grpc_client:unary(Connection, Message,
                      'ThingsService', 'Identify',
                       decoder(), Options).

%% RPCs for service 'UsersService'

-spec 'IdentifyUser'(
        Connection::grpc_client:connection(),
        Message::'Token'(),
        Options::[grpc_client:stream_option() |
                  {timeout, timeout()}]) ->
        grpc_client:unary_response('UserID'()).
%% This is a unary RPC
'IdentifyUser'(Connection, Message, Options) ->
    grpc_client:unary(Connection, Message,
                      'UsersService', 'Identify',
                       decoder(), Options).

